/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.overview;

import controller.PlayerController;
import java.util.ArrayList;
import java.util.Comparator;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.Player;

/**
 *
 * @author nikko
 */
public class PlayerOverview extends javax.swing.JPanel {

    DefaultTableModel tableModel;
    private ArrayList<Player> players;
    private ArrayList<Player> searchedPlayers = new ArrayList();
    
    /**
     * Creates new form PlayerOverview
     */
    public PlayerOverview() {
        this.players = PlayerController.getPlayers();
        initComponents();
        fillTable();
        initSorter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPlayerTable = new javax.swing.JTable();
        jSearchPlayer = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jPlayerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Voornaam", "Achternaam", "Tel.", "E-mail", "Rating", "Is bekend", "Adres", "Postcode", "Woonplaats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jPlayerTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jPlayerTable);

        jSearchPlayer.setToolTipText("Zoek een speler..");
        jSearchPlayer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jSearchPlayerKeyReleased(evt);
            }
        });

        jLabel1.setText("Zoek een speler:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSearchPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSearchPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSearchPlayerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSearchPlayerKeyReleased
        searchedPlayers.clear();
        tableModel.setRowCount(0);
        tableModel.fireTableDataChanged();
        if(jSearchPlayer.getText() != null){
            tableModel.setRowCount(0);
            tableModel.fireTableDataChanged();
            for(Player player : players){
                if(player.toString().contains(jSearchPlayer.getText())) {
                    searchedPlayers.add(player);
                }
            }
            for(Player player : searchedPlayers){
                tableModel.addRow(player.getInfo());
            }
            this.jPlayerTable.setModel(tableModel);
        }
        else{
            searchedPlayers.clear();
            tableModel.setRowCount(0);
            tableModel.fireTableDataChanged();
            fillTable();
        }
    }//GEN-LAST:event_jSearchPlayerKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable jPlayerTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jSearchPlayer;
    // End of variables declaration//GEN-END:variables

    private void fillTable() {
<<<<<<< HEAD
        String[] columns = {"Voornaam", "Achternaam", "Rating", "Adres", "Postcode", "Woonplaats", "Telefoonnummer", "Emailadres", "Bekend"};
=======
        String[] columns = {"Voornaam", "Achternaam", "Rating", "Woonplaats", "Postcode", "Telefoonnummer", "Emailadres", "Bekend"};
>>>>>>> origin/master
        tableModel = new DefaultTableModel(columns, 0);   
        if(players != null){
            for(Player player : players){
                tableModel.addRow(player.getInfo());
            }
        }
        this.jPlayerTable.setModel(tableModel);
    }
    
    private void initSorter() {
        TableRowSorter<TableModel> sorter = new TableRowSorter(jPlayerTable.getModel());
        jPlayerTable.setRowSorter(sorter);
    }
}